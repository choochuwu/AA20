/*
 * Copyright (c) 2021 choochoo#8888
 *
 * SPDX-License-Identifier: MIT
 */
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
&sk {
    release-after-ms = <10000>;
};
/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
        function_layer {
            if-layers = <1 3>;
            then-layer = <4>;
        };
    };
};
/ {
    combos {
        compatible = "zmk,combos";
        combo_return {
            timeout-ms = <50>;
            key-positions = <29 30>;
            bindings = <&kp RET>;
        };
        combo_backspace {
            timeout-ms = <50>;
            key-positions = <25 26>;
            bindings = <&kp BSPC>;
        };
        combo_delete {
            timeout-ms = <50>;
            key-positions = <6 7>;
            bindings = <&kp DEL>;
        };
        combo_tab {
            timeout-ms = <50>;
            key-positions = <10 11>;
            bindings = <&kp TAB>;
        };
        combo_game_toggle {
            timeout-ms = <50>;
            key-positions = <9 10 11 12>;
            bindings = <&tog 5>;
        };
    };
};
/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <220>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };
    keymap {
        compatible = "zmk,keymap";
        default_layer {
			bindings = <
    &kp N1 &kp N2 &kp N3 &kp N4
	&kp Q &kp D &kp R &kp W &kp B &kp J &kp F &kp U &kp P   
    &hm LCMD A &hm LALT S &hm LSHFT H &hm LCTRL T &kp G &kp Y &hm RCTRL N &hm RSHFT E &hm RALT O &hm RCMD I
	&kp Z &kp X &kp M &kp C &kp V &kp K &kp L &kp COMMA &kp DOT &kp FSLH
	&kp ESC &mo 1 &kp LSHFT &kp SPACE &mo 2 &mo 3 &kp SQT
            >;
        };
        number_layer {
			bindings = <
    &none &none &none &none
    &none &none &none &none &none &none &kp N7 &kp N8 &kp N9 
    &none &none &none &none &none &none &kp N4 &kp N5 &kp N6 &none
    &none &none &none &none &none &none &kp N1 &kp N2 &kp N3 &none
    &kp ESC &mo 1 &kp LSHFT &kp SPACE &kp N0 &mo 3 &none
            >;
        };
        navigation_layer {
			bindings = <
    &none &none &none &none  
	&none &none &kp UP &none &kp HOME &kp END &none &kp UP &none      
	&kp LC(A) &kp LEFT &kp DOWN &kp RIGHT &kp PG_UP &kp PG_DN &kp LEFT &kp DOWN &kp RIGHT &kp LC(A)
	&kp LC(Z) &kp LC(X) &kp LC(C) &kp LC(V) &kp LC(Y) &kp LC(Y) &kp LC(V) &kp LC(C) &kp LC(X) &kp LC(Z) 
	&kp ESC &mo 1 &kp LSHFT &kp SPACE &kp 0 &mo 3 &none
            >;
        };
        symbol_layer {
			bindings = <
    &none &none &none &none 
	&kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT &kp CARET &kp AMPS &kp STAR &kp LPAR 
	&kp PIPE &kp COLON &kp PLUS &kp EQUAL &kp LBKT  &kp RBKT  &kp MINUS &kp UNDERSCORE &kp SEMI &kp RPAR 
	&none &none &none &kp GRAVE &kp LBRC &kp RBRC &kp TILDE &none &none &kp BSLH
	&kp ESC &mo 1 &kp LSHFT &kp SPACE &mo 2 &mo 3 &none  
            >;
        };
        funcion_layer {
			bindings = <
    &none &none &none &none 
	&kp F1 &kp F2 &kp F3 &kp F4 &none &none &none &none &none     
	&kp F5 &kp F6 &kp F7 &kp F8 &none &none &sk RCTRL &sk RSHFT &sk RALT &sk RCMD 
	&kp F9 &kp F10 &kp F11 &kp F12 &none &none &none &none &none &sk LSHFT
	&kp ESC &mo 1 &kp LSHFT &kp SPACE &mo 2 &mo 3 &none    
            >;
        };   
        game_layer {
			bindings = <
    &kp N1 &kp N2 &kp N3 &kp N4
	&kp Q &kp D &kp R &kp W &kp B &kp J &kp F &kp U &kp P   
    &kp A &kp S &kp H &kp T &kp G &kp Y &kp  N &kp E &kp O &kp I
	&kp Z &kp X &kp M &kp C &kp V &kp K &kp L &kp COMMA &kp DOT &kp BSLH
	&kp ESC &mo 1 &kp LSHFT &kp SPACE &mo 2 &mo 3 &kp SQT
            >;
        };
    };
};